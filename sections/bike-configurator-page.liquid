{{ 'section-bike-configurator.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}

{%- liquid
  if section.settings.product_handle != blank
    assign configurator_product = all_products[section.settings.product_handle]
  else
    assign configurator_product = null
  endif

  if configurator_product == null and request.design_mode
    assign configurator_product = products.first
  endif

  assign product_form_id = 'product-form-' | append: section.id
-%}

{%- if configurator_product -%}
  <section class="bike-configurator-page">
    <div class="page-width">
      
      <header class="configurator-header">
        <h1 class="configurator-title">{{ section.settings.heading }}</h1>
        <p class="configurator-subtitle">{{ section.settings.subheading }}</p>
      </header>

      <div class="configurator-container">
        
        <!-- Product Media -->
        <div class="configurator-media">
          <div class="media-container">
            {%- for media in configurator_product.media -%}
              {%- if media.media_type == 'image' -%}
                <div 
                  class="configurator-image{% if forloop.first %} active{% endif %}"
                  data-media-id="{{ media.id }}"
                >
                  <img
                    src="{{ media | image_url: width: 800 }}"
                    alt="{{ media.alt | escape }}"
                    width="{{ media.width }}"
                    height="{{ media.height }}"
                    loading="{% if forloop.first %}eager{% else %}lazy{% endif %}"
                  >
                </div>
              {%- endif -%}
            {%- endfor -%}
          </div>
          
          <div class="configurator-badges">
            <div class="badge">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M12 2L3 7L12 12L21 7L12 2Z" stroke="currentColor" stroke-width="2"/>
                <path d="M3 17L12 22L21 17" stroke="currentColor" stroke-width="2"/>
                <path d="M3 12L12 17L21 12" stroke="currentColor" stroke-width="2"/>
              </svg>
              <span>200+ Service-Standorte</span>
            </div>
            <div class="badge">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M9 12L11 14L15 10" stroke="currentColor" stroke-width="2"/>
                <circle cx="12" cy="12" r="9" stroke="currentColor" stroke-width="2"/>
              </svg>
              <span>14 Tage Rücknahmegarantie</span>
            </div>
            <div class="badge">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none">
                <circle cx="12" cy="12" r="9" stroke="currentColor" stroke-width="2"/>
                <path d="M12 6V12L16 14" stroke="currentColor" stroke-width="2"/>
              </svg>
              <span>2 Jahre Garantie</span>
            </div>
          </div>
        </div>

        <!-- Configuration Panel -->
        <div class="configurator-panel">
          
          <!-- Product Title -->
          <div class="configurator-product-title">
            <h2>{{ configurator_product.title }}</h2>
          </div>

          <!-- Price Display -->
          <div class="configurator-pricing">
            <div class="price-display">
              <span class="price-label">Total</span>
              <span class="price-amount">
                {{ configurator_product.selected_or_first_available_variant.price | money }}
              </span>
            </div>
            <div class="shipping-info">
              <span>Versand</span>
              <span>Beim Checkout berechnet</span>
            </div>
          </div>

          <!-- Variant Selection -->
          <div class="configurator-variants">
            {%- form 'product', configurator_product, id: product_form_id, class: 'form', novalidate: 'novalidate', data-type: 'add-to-cart-form' -%}
              <input type="hidden" name="id" value="{{ configurator_product.selected_or_first_available_variant.id }}" class="product-variant-id">
              
              {%- for option in configurator_product.options_with_values -%}
                <div class="variant-option-group">
                  <h3 class="option-title">{{ option.name }}</h3>
                  
                  {%- if option.name contains 'Color' or option.name contains 'Farbe' -%}
                    <div class="color-options">
                      {%- for value in option.values -%}
                        <input
                          type="radio"
                          id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                          name="options[{{ option.name }}]"
                          value="{{ value | escape }}"
                          {% if option.selected_value == value %}checked{% endif %}
                          data-variant-option="{{ option.position }}"
                        >
                        <label 
                          for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                          class="color-swatch-label"
                          title="{{ value }}"
                        >
                          <div class="color-swatch color-swatch--{{ value | handleize }}"
                               style="background-color: {% if value contains 'Black' or value contains 'Schwarz' %}#000{% elsif value contains 'Sand' %}#D4C5A0{% elsif value contains 'White' or value contains 'Weiß' %}#fff{% elsif value contains 'Red' or value contains 'Rot' %}#dc2626{% elsif value contains 'Blue' or value contains 'Blau' %}#2563eb{% elsif value contains 'Green' or value contains 'Grün' %}#16a34a{% else %}#6b7280{% endif %}">
                          </div>
                          <svg class="color-check" width="16" height="16" viewBox="0 0 16 16" fill="none">
                            <path d="M13.5 4.5L6 12L2.5 8.5" stroke="currentColor" stroke-width="2"/>
                          </svg>
                        </label>
                      {%- endfor -%}
                    </div>
                    
                  {%- elsif option.name contains 'Size' or option.name contains 'Größe' -%}
                    <div class="size-options">
                      {%- for value in option.values -%}
                        <input
                          type="radio"
                          id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                          name="options[{{ option.name }}]"
                          value="{{ value | escape }}"
                          {% if option.selected_value == value %}checked{% endif %}
                          data-variant-option="{{ option.position }}"
                        >
                        <label 
                          for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                          class="size-option-label"
                        >
                          {{ value }}
                        </label>
                      {%- endfor -%}
                    </div>
                    
                  {%- else -%}
                    <div class="default-options">
                      {%- for value in option.values -%}
                        <input
                          type="radio"
                          id="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}"
                          name="options[{{ option.name }}]"
                          value="{{ value | escape }}"
                          {% if option.selected_value == value %}checked{% endif %}
                          data-variant-option="{{ option.position }}"
                        >
                        <label for="{{ section.id }}-{{ option.position }}-{{ forloop.index0 }}">
                          {{ value }}
                        </label>
                      {%- endfor -%}
                    </div>
                  {%- endif -%}
                </div>
              {%- endfor -%}
              
              <div class="product-form__buttons">
                <button
                  type="submit"
                  name="add"
                  class="btn product-form__cart-submit btn--primary btn--full-width"
                  {% if configurator_product.selected_or_first_available_variant.available == false %}disabled{% endif %}
                >
                  <span>
                    {%- if configurator_product.selected_or_first_available_variant.available -%}
                      In den Einkaufswagen
                    {%- else -%}
                      {{ 'products.product.sold_out' | t }}
                    {%- endif -%}
                  </span>
                  <div class="loading__spinner hidden">
                    {% render 'icon-spinner' %}
                  </div>
                </button>
              </div>
            {%- endform -%}
          </div>

          <!-- Delivery Info -->
          <div class="configurator-delivery">
            <div class="delivery-info">
              <svg width="20" height="20" viewBox="0 0 20 20" fill="none">
                <rect x="2" y="3" width="16" height="14" rx="2" stroke="currentColor" stroke-width="1.5"/>
                <path d="M8 3V1M12 3V1M2 7H18" stroke="currentColor" stroke-width="1.5"/>
              </svg>
              <div>
                <span class="delivery-label">Voraussichtliche Lieferung</span>
                <span class="delivery-date">August 2025</span>
              </div>
            </div>
            <p class="payment-info">
              Bezahle in 3 zinsfreien Teilzahlungen. Mit Käuferschutz* von Klarna
            </p>
          </div>

        </div>
      </div>
    </div>
  </section>

  <!-- Variant data for JavaScript -->
  <script type="application/json" id="product-json-{{ section.id }}">
    {{ configurator_product.variants | json }}
  </script>

{%- else -%}
  <section class="bike-configurator-page">
    <div class="page-width">
      <div class="configurator-error">
        <h2>Product not found</h2>
        <p>Please select a valid product handle in the theme settings.</p>
      </div>
    </div>
  </section>
{%- endif -%}

<script>
document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('{{ product_form_id }}');
  if (!form) return;
  
  const variantData = JSON.parse(document.getElementById('product-json-{{ section.id }}').textContent);
  const variantIdInput = form.querySelector('.product-variant-id');
  const priceDisplay = form.querySelector('.price-amount');
  const addButton = form.querySelector('[name="add"]');
  const addButtonText = addButton?.querySelector('span');
  
  function updateVariant() {
    // Get selected options
    const selectedOptions = [];
    const optionInputs = form.querySelectorAll('[data-variant-option]');
    
    optionInputs.forEach(input => {
      if (input.checked) {
        const optionPosition = parseInt(input.dataset.variantOption);
        selectedOptions[optionPosition - 1] = input.value;
      }
    });
    
    // Find matching variant
    const selectedVariant = variantData.find(variant => {
      return variant.options.every((option, index) => option === selectedOptions[index]);
    });
    
    if (selectedVariant) {
      // Update variant ID
      if (variantIdInput) {
        variantIdInput.value = selectedVariant.id;
      }
      
      // Update price
      if (priceDisplay) {
        const price = new Intl.NumberFormat('de-DE', {
          style: 'currency',
          currency: 'EUR'
        }).format(selectedVariant.price / 100);
        priceDisplay.textContent = price;
      }
      
      // Update availability
      if (addButton && addButtonText) {
        if (selectedVariant.available) {
          addButton.disabled = false;
          addButtonText.textContent = 'In den Einkaufswagen';
        } else {
          addButton.disabled = true;
          addButtonText.textContent = 'Ausverkauft';
        }
      }
      
      // Update image if variant has featured media
      if (selectedVariant.featured_media) {
        const allImages = document.querySelectorAll('.configurator-image');
        allImages.forEach(img => img.classList.remove('active'));
        
        const variantImage = document.querySelector(`[data-media-id="${selectedVariant.featured_media.id}"]`);
        if (variantImage) {
          variantImage.classList.add('active');
        }
      }
    }
  }
  
  // Listen for option changes
  form.addEventListener('change', updateVariant);
  
  // Handle form submission
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(form);
    const spinner = form.querySelector('.loading__spinner');
    
    if (addButton) addButton.disabled = true;
    if (addButtonText) addButtonText.textContent = 'Wird hinzugefügt...';
    if (spinner) spinner.classList.remove('hidden');
    
    fetch('/cart/add.js', {
      method: 'POST',
      body: formData
    })
    .then(response => response.json())
    .then(data => {
      if (data.id) {
        window.location.href = '/cart';
      }
    })
    .catch(error => {
      console.error('Error:', error);
      if (addButtonText) addButtonText.textContent = 'Fehler - Erneut versuchen';
    })
    .finally(() => {
      setTimeout(() => {
        if (addButton) addButton.disabled = false;
        if (addButtonText) addButtonText.textContent = 'In den Einkaufswagen';
        if (spinner) spinner.classList.add('hidden');
      }, 1000);
    });
  });
});
</script>

{% schema %}
{
  "name": "Bike Configurator Page",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "product_handle",
      "label": "Product handle",
      "info": "Enter the handle of the product to configure"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Configure Your Bike"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Customize your bike to your exact specifications"
    }
  ],
  "presets": [
    {
      "name": "Bike Configurator Page"
    }
  ]
}
{% endschema %} 