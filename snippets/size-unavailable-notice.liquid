{% comment %} Translation strings {% endcomment %}
{% assign locale = request.locale.iso_code %}

{% case locale %}
  {% when 'de' %}
    {% assign title_text = "Größe nicht verfügbar" %}
    {% assign description_text = "Diese Größe ist derzeit nicht vorrätig. Kontaktieren Sie uns, um Ihr Fahrrad jetzt zu reservieren, und wir benachrichtigen Sie, sobald es verfügbar ist." %}
    {% assign cta_text = "Kontaktieren & Jetzt Reservieren" %}
  {% when 'es' %}
    {% assign title_text = "Talla no disponible" %}
    {% assign description_text = "Esta talla está actualmente agotada. Contáctanos para reservar tu bicicleta ahora y te notificaremos tan pronto como esté disponible." %}
    {% assign cta_text = "Contactar y Reservar Ahora" %}
  {% when 'fr' %}
    {% assign title_text = "Taille indisponible" %}
    {% assign description_text = "Cette taille est actuellement en rupture de stock. Contactez-nous pour réserver votre vélo maintenant et nous vous informerons dès qu'il sera disponible." %}
    {% assign cta_text = "Nous Contacter et Réserver" %}
  {% when 'bg' %}
    {% assign title_text = "Размерът не е наличен" %}
    {% assign description_text = "Този размер в момента не е наличен. Свържете се с нас, за да резервирате велосипеда си сега и ще ви уведомим веднага щом стане наличен." %}
    {% assign cta_text = "Свържете се и резервирайте сега" %}
  {% when 'pl' %}
    {% assign title_text = "Rozmiar niedostępny" %}
    {% assign description_text = "Ten rozmiar jest obecnie niedostępny. Skontaktuj się z nami, aby zarezerwować swój rower, a powiadomimy Cię, gdy tylko będzie dostępny." %}
    {% assign cta_text = "Skontaktuj się i zarezerwuj teraz" %}
  {% else %}
    {% assign title_text = "Size Unavailable" %}
    {% assign description_text = "This size is currently out of stock. Contact us to reserve your bike now and we will notify you as soon as it becomes available." %}
    {% assign cta_text = "Contact Us & Reserve Now" %}
{% endcase %}

<style>
  @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500;600&display=swap');

  .size-unavailable-container {
    display: none;
    margin: 20px 0;
    padding: 24px 28px;
    background: #f8f8f8;
    border-radius: 8px;
    border: 1px solid #e5e5e5;
    font-family: 'IBM Plex Sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;
  }

  .size-unavailable-container.show {
    display: block;
  }

  .size-unavailable-title {
    font-size: 16px;
    font-weight: 600;
    margin-bottom: 8px;
    background: linear-gradient(
      90deg,
      #000000 0%,
      #2d2d2d 25%,
      #000000 50%,
      #2d2d2d 75%,
      #000000 100%
    );
    background-size: 200% 100%;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    animation: gradient-shift 3s ease-in-out infinite;
    display: inline-block;
  }

  .size-unavailable-text {
    font-size: 14px;
    color: #4a4a4a;
    line-height: 1.5;
    margin-bottom: 16px;
  }

  .size-unavailable-cta {
    display: inline-flex;
    align-items: center;
    gap: 8px;
    padding: 12px 24px;
    background: #000;
    color: #fff;
    text-decoration: none;
    border-radius: 4px;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.3s ease;
    border: 2px solid #000;
  }

  .size-unavailable-cta:hover {
    background: #fff;
    color: #000;
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }

  .size-unavailable-icon {
    width: 16px;
    height: 16px;
  }

  @keyframes gradient-shift {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  @media (max-width: 768px) {
    .size-unavailable-container {
      padding: 20px;
    }
    
    .size-unavailable-title {
      font-size: 15px;
    }
    
    .size-unavailable-text {
      font-size: 13px;
    }
    
    .size-unavailable-cta {
      width: 100%;
      justify-content: center;
    }
  }
</style>

<div class="size-unavailable-container" id="size-unavailable-notice">
  <div class="size-unavailable-title">
    {{ title_text }}
  </div>
  
  <p class="size-unavailable-text">
    {{ description_text }}
  </p>
  
  <a href="mailto:info@rinosbike.eu?subject=Bike Reservation - {{ product.title }}" class="size-unavailable-cta" id="reservation-email-link">
    <svg class="size-unavailable-icon" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path>
      <polyline points="22,6 12,13 2,6"></polyline>
    </svg>
    {{ cta_text }}
  </a>
</div>

<script>
(function() {
  const notice = document.getElementById('size-unavailable-notice');
  const emailLink = document.getElementById('reservation-email-link');
  const productTitle = "{{ product.title }}";
  
  function updateNoticeVisibility() {
    // Find the Add to Cart button or variant selector
    const addToCartButton = document.querySelector('[name="add"]') || 
                           document.querySelector('.product-form__submit') ||
                           document.querySelector('[type="submit"]');
    
    // Check if button is disabled (usually means out of stock)
    const isUnavailable = addToCartButton && addToCartButton.disabled;
    
    // Also check for "sold out" text in button
    const buttonText = addToCartButton ? addToCartButton.textContent.toLowerCase() : '';
    const hasSoldOutText = buttonText.includes('sold out') || 
                          buttonText.includes('unavailable') ||
                          buttonText.includes('ausverkauft') ||
                          buttonText.includes('agotado') ||
                          buttonText.includes('épuisé') ||
                          buttonText.includes('niedostępny') ||
                          buttonText.includes('изчерпан');
    
    // Get selected variant title if available
    let variantTitle = '';
    const variantSelect = document.querySelector('select[name="id"]') ||
                         document.querySelector('.product-form__input input[type="radio"]:checked');
    if (variantSelect) {
      variantTitle = variantSelect.selectedOptions ? 
                    variantSelect.selectedOptions[0].text : 
                    (variantSelect.value || '');
    }
    
    // Update email link with variant info
    if (variantTitle) {
      emailLink.href = `mailto:info@rinosbike.eu?subject=Bike Reservation - ${productTitle} - ${variantTitle}`;
    }
    
    // Show or hide notice
    if (isUnavailable || hasSoldOutText) {
      notice.classList.add('show');
    } else {
      notice.classList.remove('show');
    }
  }
  
  // Run on page load
  updateNoticeVisibility();
  
  // Listen for variant changes
  document.addEventListener('change', updateNoticeVisibility);
  
  // Also listen for any button state changes
  const observer = new MutationObserver(updateNoticeVisibility);
  const addToCartButton = document.querySelector('[name="add"]') || 
                         document.querySelector('.product-form__submit') ||
                         document.querySelector('[type="submit"]');
  
  if (addToCartButton) {
    observer.observe(addToCartButton, { 
      attributes: true, 
      childList: true, 
      subtree: true 
    });
  }
})();
</script>